@page "/shifts"
@attribute [Microsoft.AspNetCore.Authorization.Authorize]
@inject IShiftService ShiftService 

<h3>Shift Manager: Black Friday Support</h3>

@if (_shifts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <td>Day</td>
                <td>Shift</td>
                <td>Is mine</td>
                <td>Actions</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var shift in _shifts)
            {
            <tr>
                <td>@shift.Date.ToShortDateString()</td>
                <td>@shift.TimeRange</td>
                <td>@(shift.IsMine ? "✔" : string.Empty)</td>
                <td>
                    @if (shift.IsMine)
                    {
                        <button class="btn btn-warning" @onclick="@(async () => await RemoveMeAsync(shift))">Remove me</button>
                    }
                    else if (!shift.IsAssigned)
                    {
                        <button class="btn btn-primary" @onclick="@(async () => await BookMeAsync(shift))">Book me</button>
                    }
                    else
                    {
                        <button class="btn btn-dark" disabled >Already taken</button>
                    }
                </td>
            </tr>
            }
        </tbody>
    </table>
}

@code {
    private IEnumerable<ShiftViewModel> _shifts;

    private string teamId = "273efe6e-81e2-41b5-b0da-71e5a4cc698b";

    protected override async Task OnInitializedAsync()
    {
        _shifts = await this.ShiftService.GetShiftsAsync(teamId);
    }

    private async Task RemoveMeAsync(ShiftViewModel shift)
    {
        await this.ShiftService.CancelBookingAsync(teamId, shift);

        _shifts = await this.ShiftService.GetShiftsAsync(teamId);
    }

    private async Task BookMeAsync(ShiftViewModel shift)
    {
        await this.ShiftService.BookShiftAsync(teamId, shift);

        _shifts = await this.ShiftService.GetShiftsAsync(teamId);
    }
}
